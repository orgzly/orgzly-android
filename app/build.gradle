apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21 // Lollipop (5.0)
        targetSdkVersion 31 // Android 12
        applicationId "com.orgzly"
        versionCode 161
        versionName "1.8.6"

        testInstrumentationRunner "com.orgzly.android.OrgzlyTestRunner"
        // testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        buildConfigField "String", "DROPBOX_APP_KEY", gradle.ext.appProperties.getProperty("dropbox.app_key", '""')
        resValue "string", "dropbox_app_key_schema", gradle.ext.appProperties.getProperty("dropbox.app_key_schema", '')

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true"
                ]
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

//    testOptions {
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
//    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "LOG_DEBUG", "false"
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"

            buildConfigField "String", "DROPBOX_TOKEN", gradle.ext.appProperties.getProperty("dropbox.token", '""')
        }
    }

    flavorDimensions "store"

    productFlavors {
        premium {
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "true"

            buildConfigField "boolean", "IS_GOOGLE_DRIVE_ENABLED", "true"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '""'

            dimension "store"
        }

        fdroid {
            /*
             * Disable Dropbox and Google Drive.
             * Properties file which contains the required API key is not included with the code.
             */
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "false"

            buildConfigField "boolean", "IS_GOOGLE_DRIVE_ENABLED", "false"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '" (fdroid)"'

            dimension "store"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = 11
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'plugin.properties']
        }
    }

    lint {
        checkDependencies true
        disable 'MissingTranslation', 'MissingQuantity', 'ImpliedQuantity', 'InvalidPackage'
    }
}

dependencies {
    implementation orgJavaLocation()

    implementation "org.jetbrains:annotations:$versions.jetbrains_annotations"

    implementation "androidx.multidex:multidex:$versions.android_multidex"

    implementation "androidx.appcompat:appcompat:$versions.android_appcompat"

    implementation "androidx.documentfile:documentfile:$versions.android_documentfile"
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:$versions.android_localbroadcastmanager"

    // UI
    implementation "androidx.cardview:cardview:$versions.android_cardview"
    implementation "androidx.recyclerview:recyclerview:$versions.android_recyclerview"
    implementation "androidx.viewpager:viewpager:$versions.android_viewpager"
    implementation "androidx.constraintlayout:constraintlayout:$versions.android_constraint_layout"
    implementation "androidx.preference:preference-ktx:$versions.android_preference"
    implementation "com.google.android.material:material:$versions.android_material"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.android_swiperefreshlayout"

    // Room
    implementation "androidx.room:room-runtime:$versions.android_room"
    testImplementation "androidx.room:room-testing:$versions.android_room"
    kapt "androidx.room:room-compiler:$versions.android_room"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.android_lifecycle"

    androidTestImplementation "androidx.annotation:annotation:$versions.android_annotation"

    implementation "androidx.work:work-runtime-ktx:$versions.android_workmanager"

    testImplementation "junit:junit:$versions.junit"

    // AndroidX Test
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.android_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.android_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.android_test_espresso"
    androidTestImplementation "androidx.test:runner:$versions.android_test"
    androidTestImplementation "androidx.test:rules:$versions.android_test"
    androidTestImplementation "androidx.test.ext:junit:$versions.android_test_ext_junit"

    /* For running tests on lower API versions (e.g. 18) to avoid:
     * Didn't find class "androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity"
     */
    implementation "androidx.test:core:$versions.android_test"

    // For ANDROIDX_TEST_ORCHESTRATOR
    // androidTestUtil "androidx.test:orchestrator:$android_test_version"

    androidTestImplementation "androidx.test.uiautomator:uiautomator:$versions.android_test_uiautomator"

    androidTestImplementation "de.sven-jacobs:loremipsum:$versions.loremipsum"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    implementation "com.google.code.gson:gson:$versions.gson"

    implementation "com.dropbox.core:dropbox-core-sdk:$versions.dropbox_core_sdk"

    // Google Drive
    // implementation 'com.google.api-client:google-api-client:1.23.0'
    // implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    // implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'

    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    // implementation 'com.google.android.gms:play-services-drive:17.0.0'
    implementation 'com.google.http-client:google-http-client-gson:1.26.0'
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation "com.googlecode.juniversalchardet:juniversalchardet:$versions.juniversalchardet"

    implementation "joda-time:joda-time:$versions.joda_time"

    implementation "com.github.bumptech.glide:glide:$versions.glide"

    implementation("com.github.thegrizzlylabs:sardine-android:$versions.sardine") {
        exclude group: 'xpp3', module: 'xpp3'
    }

    constraints {
        implementation('com.squareup.okhttp3:okhttp:4.10.0-RC1') {
            because 'https://github.com/orgzly/orgzly-android/issues/880'
        }
    }

    implementation "io.github.rburgst:okhttp-digest:$versions.okhttp_digest"

    implementation "org.eclipse.jgit:org.eclipse.jgit:$versions.jgit"
    implementation "org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:$versions.jgit"
}

repositories {
    mavenCentral()
}

/*
 * If "orgJavaDir" property is set, load org-java as a module. If property is not set,
 * use org-java from Maven repository. See settings.gradle.
 */
def orgJavaLocation() {
    if (gradle.ext.has('orgJavaDir')) {
        logger.info("app: Using org-java from ${gradle.ext.orgJavaDir}")
        return project(':org-java')
    } else {
        logger.info("app: Using com.orgzly:org-java:$versions.org_java from Maven repository")
        return "com.orgzly:org-java:$versions.org_java"
    }
}
